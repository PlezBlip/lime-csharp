<UserControl x:Class="Lime.Client.TestConsole.Views.SessionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vw="clr-namespace:Lime.Client.TestConsole.Views"
             xmlns:vr="clr-namespace:Lime.Client.TestConsole.ValidationRules"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DataContext="{d:DesignData /DesignData/SessionDesignData.xaml}"
             d:DesignHeight="768"
             d:DesignWidth="1224"
             Name="UcSessionView">

    <UserControl.Resources>
        <ResourceDictionary Source="ApplicationResourcesDictionary.xaml" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="300*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="240*" />
                    <RowDefinition Height="160*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="100" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="100*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Margin="0,0,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Content="Host" FontWeight="Bold" />
                    <TextBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Host, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" Margin="0,0,15,0" />

                    <StackPanel Grid.Row="1" Grid.Column="0"  Margin="0,5" Orientation="Horizontal" Grid.ColumnSpan="2">
                        <Button Content="_Open" Command="{Binding OpenTransportCommand}" />
                        <Button Content="_Close" Command="{Binding CloseTransportCommand}" />
                        <xctk:WatermarkTextBox Margin="0,0,5,0"  VerticalAlignment="Center" Watermark="Client certificate thumbprint" Width="180" Text="{Binding ClientCertificateThumbprint, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel Grid.Row="2" Grid.Column="0"  Margin="0,5" Orientation="Horizontal" Grid.ColumnSpan="2">
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="Last session state" />
                        <TextBox Margin="0,0,5,0" VerticalAlignment="Center" Width="80" IsReadOnly="True" Text="{Binding LastSessionState}" />
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="Last notification" />
                        <TextBox Margin="0,0,5,0" VerticalAlignment="Center" Width="80" IsReadOnly="True" Text="{Binding LastNotificationEvent}" />
                    </StackPanel>

                    <StackPanel Grid.Row="3" Grid.Column="0"  Margin="0,5" Orientation="Horizontal" Grid.ColumnSpan="2">
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="Local node" />
                        <TextBox Margin="0,0,5,0" VerticalAlignment="Center" Width="250" IsReadOnly="True" Text="{Binding LocalNode, Converter={StaticResource ToStringConverter}}" />
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="Remote node" />
                        <TextBox Margin="0,0,5,0" VerticalAlignment="Center" Width="250" IsReadOnly="True" Text="{Binding RemoteNode, Converter={StaticResource ToStringConverter}}" />
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Margin="0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" PreviewMouseWheel="ScrollViewerContents_PreviewMouseWheel">
                        <ListBox Name="EnvelopesListBox" ItemsSource="{Binding EnvelopesView}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <vw:EnvelopeView x:Name="EnvelopesView" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                    <StackPanel Margin="0,5" Orientation="Horizontal" Grid.Row="1">
                        <Button Content="Clear" Command="{Binding ClearTraceCommand}" />
                        <CheckBox Margin="0,5" Content="Show raw values" IsChecked="{Binding ShowRawValues}" />
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <xctk:WatermarkTextBox FontFamily="Courier New"
                                       Watermark="JSON input"
                                       TextWrapping="NoWrap"
                                       VerticalScrollBarVisibility="Auto"
                                       HorizontalScrollBarVisibility="Auto"
                                       AcceptsReturn="True" 
                                       AcceptsTab="True"
                                       Name="JsonInput"
                                       Validation.ErrorTemplate="{StaticResource JsonErrorTemplate}"
                                       Style="{StaticResource jsonErrorStyle}" Margin="0,0,15,0"
                                       PreviewMouseWheel="JsonInput_PreviewMouseWheel">
                        <TextBox.Text>
                            <Binding Path="InputJson" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <vr:JsonEnvelopeValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </xctk:WatermarkTextBox>

                    <StackPanel Grid.Row="1" Margin="0,18" Orientation="Horizontal">
                        <Button Content="_Indent" ToolTip="Indent the JSON input" Command="{Binding IndentCommand}" />
                        <Button Content="_Validate" ToolTip="Validates the JSON input" Command="{Binding ValidateCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="0,0,5,0"/>
                                    <Setter Property="Padding" Value="10,0,10,0"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=JsonInput}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=JsonInput}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="_Parse" ToolTip="Parse the input variables" Command="{Binding ParseCommand}" />
                        <Button Content="_Send" ToolTip="Sends the JSON through the transport" Command="{Binding SendCommand}" CommandParameter="{Binding ElementName=JsonInput,Path=Text}" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <CheckBox Grid.Row="0" Grid.Column="0" Margin="0,0,5,0" VerticalAlignment="Center" Content="Parse before send" IsChecked="{Binding ParseBeforeSend}" />
                            <CheckBox Grid.Row="1" Grid.Column="0" Margin="0,0,5,0" VerticalAlignment="Center" Content="Clear after sent" IsChecked="{Binding ClearAfterSent}" />
                            <CheckBox Grid.Row="0" Grid.Column="1" Margin="0,0,5,0" VerticalAlignment="Center" Content="Send as raw" IsChecked="{Binding SendAsRaw}" IsEnabled="{Binding CanSendAsRaw}" />
                            <CheckBox Grid.Row="1" Grid.Column="1" Margin="0,0,5,0" VerticalAlignment="Center" Content="Ignore parsing errors" IsChecked="{Binding IgnoreParsingErrors}" />
                        </Grid>

                        <CheckBox Margin="0,0,5,0" Content="Repeat" IsChecked="{Binding Repeat}" />
                        <xctk:IntegerUpDown Margin="0,0,0,0" Height="18" VerticalAlignment="Top" Minimum="1" Value="{Binding RepeatTimes}" ToolTip="bra" />
                        <Label Margin="0,-5,3,0" Content="times" />

                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" />

                <ScrollViewer Grid.Row="4" Grid.ColumnSpan="3" ScrollChanged="ScrollViewer_ScrollChanged" PreviewMouseWheel="ScrollViewerContents_PreviewMouseWheel">
                    <ListBox ItemsSource="{Binding StatusMessages}" SelectionMode="Extended">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TimestampFormat, Mode=OneWay}"></TextBlock>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Message}">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{StaticResource IsErrorToBrushConverter }">
                                                <Binding Path="IsError"/>
                                                <Binding ElementName="UcSessionView" Path="Style"/>
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>

                <GridSplitter Grid.Column="1" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch"/>

                <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="200*" />
                            <RowDefinition Height="200*" />
                            <RowDefinition Height="200*" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Variable Profiles" FontWeight="Bold" />

                            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding ProfilesView}" SelectedItem="{Binding SelectedProfile, Mode=TwoWay}" SelectedIndex="{Binding SelectedProfileIndex}" IsTextSearchEnabled="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding LoadProfileCommand}"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>



                        </Grid>

                        <Grid Grid.Row="1" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <xctk:WatermarkTextBox MinWidth="128" Grid.Column="0" Text="{Binding ProfileName, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" Watermark="Profile name"></xctk:WatermarkTextBox>
                                <Button Grid.Column="1" Content="Delete Profile" Command="{Binding DeleteElementProfileCommand}" />
                                <Button Grid.Column="2" Content="Save Profile" Command="{Binding SaveProfileCommand}" Margin="0,0,0,0" />
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="Variables" FontWeight="Bold" />
                            <ScrollViewer Grid.Row="1" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                <DataGrid RowHeaderWidth="0" AutoGenerateColumns="False" ItemsSource="{Binding Variables}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="50*" />
                                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="50*" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </ScrollViewer>
                        </Grid>

                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="Templates" FontWeight="Bold" />
                            <xctk:WatermarkTextBox Margin="0,0,0,5" Grid.Row="1" Watermark="Search templates"  Text="{Binding TemplatesFilter, UpdateSourceTrigger=PropertyChanged}" />
                            <ScrollViewer Grid.Row="2" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                <ListBox ItemsSource="{Binding TemplatesView}" SelectedValue="{Binding SelectedTemplate}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding LoadTemplateCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontWeight="Bold"  Text="{Binding Name}" />
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </ScrollViewer>
                            <StackPanel Margin="0,5,0,0" Grid.Row="3" Orientation="Horizontal">
                                <Button Content="_Load" ToolTip="Load the selected template to the input" Command="{Binding LoadTemplateCommand }" />
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="Macros" FontWeight="Bold" />
                            <ScrollViewer Grid.Row="1" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                <ListBox ItemsSource="{Binding MacrosView}" SelectedValue="{Binding SelectedMacro}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding LoadTemplateCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontWeight="Bold"  Text="{Binding Name}" />
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>

            <StatusBar Grid.Row="1">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <ProgressBar Width="95" Height="16" IsIndeterminate="{Binding IsBusy}" />
                </StatusBarItem>
                <Separator Grid.Column="1" />
                <StatusBarItem Grid.Column="2">
                    <TextBlock Text="{Binding StatusMessage}" Width="988" />
                </StatusBarItem>
                <Separator Grid.Column="3" />
                <StatusBarItem Grid.Column="4">
                    <CheckBox Name="IsDarkMode" Content="Dark Mode" IsChecked="{Binding DarkMode, UpdateSourceTrigger=PropertyChanged}" Checked="IsDarkMode_Checked" Unchecked="IsDarkMode_Checked"></CheckBox>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>